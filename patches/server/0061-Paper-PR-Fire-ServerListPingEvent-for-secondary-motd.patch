From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Tue, 11 Oct 2022 14:28:39 +0300
Subject: [PATCH] Paper PR - Fire ServerListPingEvent for secondary motd send


diff --git a/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java b/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java
index 6b0bdc266109cdfb874f08bf74323603921d2260..2dc2f792e936eca88a80e50c9ff1236d111aacef 100644
--- a/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java
+++ b/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java
@@ -75,13 +75,24 @@ public final class StandardPaperServerListPingEventImpl extends PaperServerListP
     }
 
     public static void processRequest(MinecraftServer server, Connection networkManager) {
+        ServerStatus ping = getEventResponse(server, networkManager);
+
+        if (ping == null) {
+            networkManager.disconnect(null);
+            return;
+        }
+
+        // Send response
+        networkManager.send(new ClientboundStatusResponsePacket(ping));
+    }
+
+    public static ServerStatus getEventResponse(MinecraftServer server, Connection networkManager) {
         StandardPaperServerListPingEventImpl event = new StandardPaperServerListPingEventImpl(server, networkManager, server.getStatus());
         server.server.getPluginManager().callEvent(event);
 
         // Close connection immediately if event is cancelled
         if (event.isCancelled()) {
-            networkManager.disconnect(null);
-            return;
+            return null;
         }
 
         // Setup response
@@ -107,10 +118,7 @@ public final class StandardPaperServerListPingEventImpl extends PaperServerListP
         } else {
             favicon = Optional.empty();
         }
-        final ServerStatus ping = new ServerStatus(description, players, Optional.of(version), favicon, server.enforceSecureProfile());
-
-        // Send response
-        networkManager.send(new ClientboundStatusResponsePacket(ping));
+        return new ServerStatus(description, players, Optional.of(version), favicon, server.enforceSecureProfile());
     }
 
 }
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index b04e905534baf35e50d9d09921581e04edd19fc5..c6c6b074e7a397c4cd87c3f1d0aeff5232c48c05 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -301,11 +301,13 @@ public abstract class PlayerList {
         Component joinMessage = ichatmutablecomponent; // Paper - Adventure
 
         playerconnection.teleport(player.getX(), player.getY(), player.getZ(), player.getYRot(), player.getXRot());
-        ServerStatus serverping = this.server.getStatus();
-
-        if (serverping != null) {
-            player.sendServerStatus(serverping);
-        }
+        // Paper start - fire ServerListPingEvent
+        io.papermc.paper.util.MCUtil.scheduleAsyncTask(() -> {
+            if (player.hasDisconnected()) return;
+            net.minecraft.network.protocol.status.ServerStatus status = com.destroystokyo.paper.network.StandardPaperServerListPingEventImpl.getEventResponse(this.server, player.connection.connection);
+            if (status != null) player.sendServerStatus(status);
+        });
+        // Paper end
 
         // player.connection.send(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(this.players)); // Paper
         this.players.add(player);
