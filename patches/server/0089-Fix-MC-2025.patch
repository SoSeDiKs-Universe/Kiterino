From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Tue, 10 Jan 2023 01:04:02 +0200
Subject: [PATCH] Fix MC-2025


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 753f381e4a435d6f5be0573caaf2766668304ceb..f496ad03e5700b30c2a034991d8ee10f89cd1de6 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -2527,6 +2527,19 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 nbt.putUUID("Kiterino.SpawningPlayerUUID", spawningPlayerUuid);
             }
             // Kiterino end
+
+            // Kiterino start - Fix MC-2025
+            // See: https://redd.it/8pgd4q
+            AABB boundingBox = getBoundingBox();
+            var boundingBoxList = new ListTag();
+            boundingBoxList.add(DoubleTag.valueOf(boundingBox.minX));
+            boundingBoxList.add(DoubleTag.valueOf(boundingBox.minY));
+            boundingBoxList.add(DoubleTag.valueOf(boundingBox.minZ));
+            boundingBoxList.add(DoubleTag.valueOf(boundingBox.maxX));
+            boundingBoxList.add(DoubleTag.valueOf(boundingBox.maxY));
+            boundingBoxList.add(DoubleTag.valueOf(boundingBox.maxZ));
+            nbt.put("Kiterino.BoundingBox", boundingBoxList);
+            // Kiterino end
             return nbt;
         } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Saving entity NBT");
@@ -2604,6 +2617,21 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                         this.reapplyPosition();
                     }
 
+                    // Kiterino start - Fix MC-2025
+                    // See: https://redd.it/8pgd4q
+                    if (nbt.contains("Kiterino.BoundingBox", net.minecraft.nbt.Tag.TAG_LIST)) {
+                        ListTag boundingBoxList = nbt.getList("Kiterino.BoundingBox", net.minecraft.nbt.Tag.TAG_DOUBLE);
+                        setBoundingBox(new AABB(
+                                boundingBoxList.getDouble(0),
+                                boundingBoxList.getDouble(1),
+                                boundingBoxList.getDouble(2),
+                                boundingBoxList.getDouble(3),
+                                boundingBoxList.getDouble(4),
+                                boundingBoxList.getDouble(5)
+                        ));
+                    }
+                    // Kiterino end
+
                 } else {
                     throw new IllegalStateException("Entity has invalid rotation");
                 }
