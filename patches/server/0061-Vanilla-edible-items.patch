From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Tue, 7 Jun 2022 15:31:47 +0300
Subject: [PATCH] Vanilla edible items


diff --git a/src/main/java/net/minecraft/world/item/Item.java b/src/main/java/net/minecraft/world/item/Item.java
index 6cf1762cafa628dd88c89c5df7b400758e054401..b38c986d79ae9face1ed8e2993c04fef9debb2c5 100644
--- a/src/main/java/net/minecraft/world/item/Item.java
+++ b/src/main/java/net/minecraft/world/item/Item.java
@@ -67,7 +67,7 @@ public class Item implements FeatureElement, ItemLike {
     @Nullable
     private String descriptionId;
     @Nullable
-    private final FoodProperties foodProperties;
+    private FoodProperties foodProperties; // Kiterino - remove final
     private final FeatureFlagSet requiredFeatures;
 
     public static int getId(Item item) {
@@ -349,6 +349,12 @@ public class Item implements FeatureElement, ItemLike {
         return this.foodProperties;
     }
 
+    // Kiterino start
+    public void setFoodProperties(@Nullable FoodProperties foodProperties) {
+        this.foodProperties = foodProperties;
+    }
+    // Kiterino end
+
     public SoundEvent getDrinkingSound() {
         return SoundEvents.GENERIC_DRINK;
     }
diff --git a/src/main/java/org/purpurmc/purpur/PurpurConfig.java b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
index 2d323a0f0611a973b8171c01fd0925a03b2204cb..8d9121fe2d422faec92563c1be4fdb3e95de410c 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
@@ -527,12 +527,23 @@ public class PurpurConfig {
             return;
         }
         properties.getKeys(false).forEach(foodKey -> {
-            FoodProperties food = Foods.ALL_PROPERTIES.get(foodKey);
-            if (food == null) {
-                PurpurConfig.log(Level.SEVERE, "Invalid food property: " + foodKey);
-                return;
+            // Kiterino start
+            FoodProperties foodCheck = Foods.ALL_PROPERTIES.get(foodKey);
+            FoodProperties food;
+            org.bukkit.Material material;
+            if (foodCheck == null) {
+                material = org.bukkit.Material.getMaterial(foodKey.toUpperCase());
+                if (material == null) {
+                    PurpurConfig.log(Level.SEVERE, "Invalid food property: " + foodKey);
+                    return;
+                }
+                food = new FoodProperties.Builder().build();
+            } else {
+                food = foodCheck;
+                material = null;
             }
-            FoodProperties foodDefaults = Foods.DEFAULT_PROPERTIES.get(foodKey);
+            FoodProperties foodDefaults = material == null ? Foods.DEFAULT_PROPERTIES.get(foodKey) : food.copy();
+            // Kiterino end
             food.setNutrition(properties.getInt(foodKey + ".nutrition", foodDefaults.getNutrition()));
             food.setSaturationModifier((float) properties.getDouble(foodKey + ".saturation-modifier", foodDefaults.getSaturationModifier()));
             food.setIsMeat(properties.getBoolean(foodKey + ".is-meat", foodDefaults.isMeat()));
@@ -569,6 +580,7 @@ public class PurpurConfig {
                     food.getEffects().add(Pair.of(new MobEffectInstance(effect, duration, amplifier, ambient, visible, showIcon), chance));
                 });
             }
+            if (material != null) org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftCopy(new org.bukkit.inventory.ItemStack(material)).handle.getItem().setFoodProperties(food); // Kiterino
         });
     }
 
