From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Mon, 29 Jun 2020 14:32:55 +0300
Subject: [PATCH] Allow force sleeping


diff --git a/src/main/java/net/minecraft/server/commands/TeleportCommand.java b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
index 027ca5b67c544048815ddef4bb36d0a8fc3d038c..d09b088ff7a618d9bc360a73df759af0601230a7 100644
--- a/src/main/java/net/minecraft/server/commands/TeleportCommand.java
+++ b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
@@ -159,7 +159,7 @@ public class TeleportCommand {
 
                 world.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, target.getId());
                 target.stopRiding();
-                if (((ServerPlayer) target).isSleeping()) {
+                if (((ServerPlayer) target).isSleeping() && ((ServerPlayer) target).checkBedExists()) { // Kiterino - wake up only if bed exists
                     ((ServerPlayer) target).stopSleepInBed(true, true);
                 }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 7bc44be471c1736cfb2665d615325e79bce70695..d2686e611879064b7331ff1c6c7b37542aa449ad 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -3056,7 +3056,7 @@ public abstract class LivingEntity extends Entity {
                 this.getCombatTracker().recheckStatus();
             }
 
-            if (this.isSleeping() && !this.checkBedExists()) {
+            if (false && this.isSleeping() && !this.checkBedExists()) { // Kiterino - do not wake up automatically even if no bed underneath
                 this.stopSleeping();
             }
         }
@@ -4292,6 +4292,16 @@ public abstract class LivingEntity extends Entity {
         return this.getSleepingPos().isPresent();
     }
 
+    // Kiterino start
+    public void forceSleep(double x, double y, double z) {
+        this.setPose(Pose.SLEEPING);
+        this.setPosToBed(new BlockPos(x, 0, z));
+        this.setSleepingPos(new BlockPos(x + 0.2, y + 0.1, z + 0.2));
+        this.setDeltaMovement(Vec3.ZERO);
+        this.hasImpulse = true;
+    }
+    // Kiterino end
+
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
             this.stopRiding();
@@ -4314,7 +4324,7 @@ public abstract class LivingEntity extends Entity {
         this.setPos((double) pos.getX() + 0.5D, (double) pos.getY() + 0.6875D, (double) pos.getZ() + 0.5D);
     }
 
-    private boolean checkBedExists() {
+    public boolean checkBedExists() { // Kiterino - private -> public
         return (Boolean) this.getSleepingPos().map((blockposition) -> {
             return this.level.getBlockState(blockposition).getBlock() instanceof BedBlock;
         }).orElse(false);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index e8e47b23707988a821951896cb8877cf14f56220..71233e6b788be81346f8d8fab1cc8327bd365d9b 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -1329,7 +1329,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         if (dismount) entity.stopRiding(); // Paper - Teleport API
 
         // SPIGOT-5509: Wakeup, similar to riding
-        if (this.isSleeping()) {
+        if (this.isSleeping() && getHandle().checkBedExists()) { // Kiterino - wake up only if bed exists
             this.wakeup(false);
         }
 
@@ -3083,4 +3083,12 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         this.getHandle().connection.send(packet);
     }
     // Purpur end
+
+    // Kiterino start
+    @Override
+    public void forceSleep() {
+        Location loc = getLocation();
+        getHandle().forceSleep(loc.getX(), loc.getY(), loc.getZ());
+    }
+    // Kiterino end
 }
