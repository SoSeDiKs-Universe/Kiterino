From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Tue, 12 Oct 2021 21:10:47 +0200
Subject: [PATCH] Weeper - Implement take and place


diff --git a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
index 31c9bb73b73be99b95a7dde55d276964522a6d7d..b20ae30295733304976a2106fcfd9ad08e2be1d8 100644
--- a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
@@ -157,6 +157,12 @@ public abstract class AbstractContainerMenu {
         return slot;
     }
 
+    // Weeper start - inventoryItemStackMoveStrategy
+    public void setItemStackMoveStrategy(com.github.weepingmc.inventory.InventoryItemStackMoveStrategy inventoryItemStackMoveStrategy) {
+        this.slots.forEach(slot -> slot.setInventoryItemstackMoveStrategy(inventoryItemStackMoveStrategy));
+    }
+    // Weeper end - inventoryItemStackMoveStrategy
+
     protected DataSlot addDataSlot(DataSlot property) {
         this.dataSlots.add(property);
         this.remoteDataSlots.add(0);
diff --git a/src/main/java/net/minecraft/world/inventory/Slot.java b/src/main/java/net/minecraft/world/inventory/Slot.java
index 52d555af415277d8d1f30d8b46855d4b05867597..f530ebd781260be7f836a2f2af841a9556ebb601 100644
--- a/src/main/java/net/minecraft/world/inventory/Slot.java
+++ b/src/main/java/net/minecraft/world/inventory/Slot.java
@@ -14,6 +14,13 @@ public class Slot {
     public int index;
     public final int x;
     public final int y;
+    private @Nullable com.github.weepingmc.inventory.InventoryItemStackMoveStrategy inventoryItemStackMoveStrategy;
+
+    // Weeper start - inventoryItemStackMoveStrategy
+    public void setInventoryItemstackMoveStrategy(@Nullable com.github.weepingmc.inventory.InventoryItemStackMoveStrategy inventoryItemStackMoveStrategy){
+        this.inventoryItemStackMoveStrategy = inventoryItemStackMoveStrategy;
+    }
+    // Weeper end - inventoryItemStackMoveStrategy
 
     public Slot(Container inventory, int index, int x, int y) {
         this.container = inventory;
@@ -44,7 +51,7 @@ public class Slot {
     }
 
     public boolean mayPlace(ItemStack stack) {
-        return true;
+        return this.inventoryItemStackMoveStrategy == null || inventoryItemStackMoveStrategy.canPlace(new com.github.weepingmc.inventory.SlotItemStackMovementStrategyItem(container.getOwner(), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(stack), slot));
     }
 
     public ItemStack getItem() {
@@ -87,7 +94,7 @@ public class Slot {
     }
 
     public boolean mayPickup(Player playerEntity) {
-        return true;
+        return this.inventoryItemStackMoveStrategy == null || inventoryItemStackMoveStrategy.canTake(new com.github.weepingmc.inventory.SlotItemStackMovementStrategyItem(container.getOwner(), org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(this.getItem()), slot));
     }
 
     public boolean isActive() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
index e4afb366ba6f03c1e852e31ca14b58e21abe99d8..3cd90a28320864bf993618a837b31a2e96e4b400 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
@@ -308,6 +308,11 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
 
     @Override
     public InventoryView openInventory(Inventory inventory) {
+        return openInventory(inventory, (com.github.weepingmc.inventory.InventoryItemStackMoveStrategy) null);
+    }
+
+    @Override
+    public InventoryView openInventory(Inventory inventory, com.github.weepingmc.inventory.InventoryItemStackMoveStrategy inventoryItemStackMoveStrategy) {
         if (!(this.getHandle() instanceof ServerPlayer)) return null;
         ServerPlayer player = (ServerPlayer) this.getHandle();
         AbstractContainerMenu formerContainer = this.getHandle().containerMenu;
@@ -337,7 +342,7 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
         if (iinventory instanceof MenuProvider) {
             this.getHandle().openMenu(iinventory);
         } else {
-            CraftHumanEntity.openCustomInventory(inventory, player, container);
+            CraftHumanEntity.openCustomInventory(inventory, player, container, inventoryItemStackMoveStrategy);
         }
 
         if (this.getHandle().containerMenu == formerContainer) {
@@ -348,9 +353,20 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
     }
 
     private static void openCustomInventory(Inventory inventory, ServerPlayer player, MenuType<?> windowType) {
+        // Weeper start - InventoryItemStackMoveStrategy
+        openCustomInventory( inventory, player, windowType, null);
+    }
+
+    private static void openCustomInventory(Inventory inventory, ServerPlayer player, MenuType<?> windowType, @javax.annotation.Nullable com.github.weepingmc.inventory.InventoryItemStackMoveStrategy inventoryItemStackMoveStrategy) {
+        // Weeper end - InventoryItemStackMoveStrategy
         if (player.connection == null) return;
         Preconditions.checkArgument(windowType != null, "Unknown windowType");
         AbstractContainerMenu container = new CraftContainer(inventory, player, player.nextContainerCounter());
+        // Weeper start - InventoryItemStackMoveStrategy
+        if (inventoryItemStackMoveStrategy != null){
+            container.setItemStackMoveStrategy(inventoryItemStackMoveStrategy);
+        }
+        // Weeper end - InventoryItemStackMoveStrategy
 
         container = CraftEventFactory.callInventoryOpenEvent(player, container);
         if (container == null) return;
