From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Wed, 7 Dec 2022 10:18:16 +0200
Subject: [PATCH] Simple water biome cache


diff --git a/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java b/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java
index 8b96d1b7548d354fbcabe6d1b5e9d6c3e2a5cb9d..e17e453cbd91047aa586d62d6ef310153746b3a7 100644
--- a/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java
+++ b/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java
@@ -128,6 +128,8 @@ public abstract class ChunkAccess implements BlockGetter, BiomeManager.NoiseBiom
     }
     // Paper end - rewrite light engine
 
+    public @Nullable Boolean infiniteWater; // Kiterino
+
     public ChunkAccess(ChunkPos pos, UpgradeData upgradeData, LevelHeightAccessor heightLimitView, Registry<Biome> biomeRegistry, long inhabitedTime, @Nullable LevelChunkSection[] sectionArray, @Nullable BlendingData blendingData) {
         this.locX = pos.x; this.locZ = pos.z; // Paper - reduce need for field lookups
         this.chunkPos = pos; this.coordinateKey = ChunkPos.asLong(locX, locZ); // Paper - cache long key
diff --git a/src/main/java/net/minecraft/world/level/material/WaterFluid.java b/src/main/java/net/minecraft/world/level/material/WaterFluid.java
index 7cd79caa9174ed079efae872bdde54980f55c11e..50dc7b5c9c0f78e8ec2a568f687b75a62e6c31ad 100644
--- a/src/main/java/net/minecraft/world/level/material/WaterFluid.java
+++ b/src/main/java/net/minecraft/world/level/material/WaterFluid.java
@@ -67,19 +67,27 @@ public abstract class WaterFluid extends FlowingFluid {
     // Kiterino start
     @Override
     protected boolean canConvertToSource(Level world, BlockPos pos) {
-        return isInInfiniteBiome(world, pos) || canConvertToSource(world);
+        return isInInfiniteBiome(this, world, pos) || canConvertToSource(world);
     }
 
     @Override
     protected boolean isUnfillableInBiome(Fluid fluid, LevelReader world, BlockPos flowTo) {
-        return isInInfiniteBiome(world, flowTo);
+        return isInInfiniteBiome(fluid, world, flowTo);
     }
 
-    private boolean isInInfiniteBiome(LevelReader world, BlockPos pos) {
-        if (isInfiniteBiome(world.getBiome(pos))) return true;
-        if (true) return false; // ToDo: TPS killer, needs caching
+    private boolean isInInfiniteBiome(Fluid fluid, LevelReader world, BlockPos pos) {
+        net.minecraft.world.level.chunk.ChunkAccess chunk = world.getChunkIfLoadedImmediately(pos.getX() >> 4, pos.getZ() >> 4);
+        if (chunk == null) return isInfiniteBiome(world.getBiome(pos));
+        if (chunk.infiniteWater != null) return chunk.infiniteWater;
+        if (isInfiniteBiome(world.getBiome(pos))) return chunk.infiniteWater = true;
         if (!((world instanceof net.minecraft.server.level.ServerLevel level))) return false;
-        return level.findClosestBiome3d(this::isInfiniteBiome, pos, 18, 8, 8) != null;
+        if (org.bukkit.Bukkit.isLagging() || org.bukkit.Bukkit.getCurrentTick() % 20 > 6) {
+            level.scheduleTick(pos, fluid, 15);
+            return false;
+        }
+        net.minecraft.world.level.ChunkPos chunkPos = chunk.getPos();
+        pos = new BlockPos(chunkPos.getMiddleBlockX(), world.getSeaLevel(), chunkPos.getMiddleBlockZ());
+        return chunk.infiniteWater = level.findClosestBiome3d(this::isInfiniteBiome, pos, 18, 8, 8) != null;
     }
 
     private boolean isInfiniteBiome(net.minecraft.core.Holder<net.minecraft.world.level.biome.Biome> biome) {
