From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Mon, 29 Jun 2020 14:48:33 +0300
Subject: [PATCH] Allow sleeping anytime and anywhere


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 89a10b7238c305f968695aa492670ab9d1137e7e..915419fa7002e84e95077e3a5209a7e0a7742548 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -634,8 +634,19 @@ public class ServerLevel extends Level implements WorldGenLevel {
                 if (!event.isCancelled()) {
                     this.setDayTime(this.getDayTime() + event.getSkipAmount());
                 }
+
+                // Kiterino start
+                if (!event.isCancelled()) {
+                    this.wakeUpAllPlayers();
+                }
+                // CraftBukkit end
+                if (this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE)) {
+                    this.resetWeatherCycle();
+                }
+                // Kiterino end
             }
 
+            /* Kiterino start - moved up
             if (!event.isCancelled()) {
                 this.wakeUpAllPlayers();
             }
@@ -643,6 +654,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             if (this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE) && this.isRaining()) {
                 this.resetWeatherCycle();
             }
+            */ // Kiterino end
         }
 
         this.updateSkyBrightness();
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 9c09e46aeea0527880e935c1e3cf1046036d5764..ee2f8e8491dff4ed010c0d05c71c27181e4a7863 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1334,6 +1334,7 @@ public class ServerPlayer extends Player {
                 return Either.left(Player.BedSleepingProblem.OBSTRUCTED);
             } else {
                 this.setRespawnPosition(this.level.dimension(), blockposition, this.getYRot(), false, true, com.destroystokyo.paper.event.player.PlayerSetSpawnEvent.Cause.BED); // Paper - PlayerSetSpawnEvent
+                if (true) return Either.right(Unit.INSTANCE); // Kiterino - allow sleeping anytime
                 if (this.level.isDay()) {
                     return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_NOW);
                 } else {
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 7344324517fb10ee6ab3467b40fcb9cd798961cb..8ecc36633cc1116acdd8081cf8f811796d729411 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -293,7 +293,7 @@ public abstract class Player extends LivingEntity {
                 this.sleepCounter = 100;
             }
 
-            if (!this.level.isClientSide && this.level.isDay()) {
+            if (false && !this.level.isClientSide && this.level.isDay()) { // Kiterino - allow sleeping anytime and anywhere
                 this.stopSleepInBed(false, true);
             }
         } else if (this.sleepCounter > 0) {
