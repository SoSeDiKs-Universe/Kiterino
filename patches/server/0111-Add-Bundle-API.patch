From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Sun, 9 Jul 2023 01:50:02 +0300
Subject: [PATCH] Add Bundle API


diff --git a/src/main/java/net/minecraft/world/item/BundleItem.java b/src/main/java/net/minecraft/world/item/BundleItem.java
index ac0bc87f60c4e1562d1301522183e449558d42f8..2b4b71fa612d61b63355ed706d0eb8c58fcba958 100644
--- a/src/main/java/net/minecraft/world/item/BundleItem.java
+++ b/src/main/java/net/minecraft/world/item/BundleItem.java
@@ -48,10 +48,17 @@ public class BundleItem extends Item {
             if (itemStack.isEmpty()) {
                 this.playRemoveOneSound(player);
                 removeOne(stack).ifPresent((removedStack) -> {
+                    // Kiterino start
+                    if (!new me.sosedik.kiterino.event.player.PlayerRemovesItemFromBundleEvent(((ServerPlayer) player).getBukkitEntity(), stack.asBukkitMirror(), removedStack.asBukkitMirror(), slot.getContainerSlot(), false).callEvent()) {
+                        add(stack, itemStack);
+                        return;
+                    }
+                    // Kiterino end
                     add(stack, slot.safeInsert(removedStack));
                 });
             } else if (itemStack.getItem().canFitInsideContainerItems()) {
-                int i = (64 - getContentWeight(stack)) / getWeight(itemStack);
+                if (!new me.sosedik.kiterino.event.player.PlayerPutsItemInBundleEvent(((ServerPlayer) player).getBukkitEntity(), stack.asBukkitMirror(), itemStack.asBukkitMirror(), slot.getContainerSlot(), false).callEvent()) return true; // Kiterino
+                int i = (64 - getContentWeight(stack)) / getWeight(stack, itemStack); // Kiterino
                 int j = add(stack, slot.safeTake(itemStack.getCount(), Math.max(0, i), player)); // Paper - prevent item addition on overfilled bundles - safeTake will yield EMPTY for amount == 0.
                 if (j > 0) {
                     this.playInsertSound(player);
@@ -67,10 +74,17 @@ public class BundleItem extends Item {
         if (clickType == ClickAction.SECONDARY && slot.allowModification(player)) {
             if (otherStack.isEmpty()) {
                 removeOne(stack).ifPresent((itemStack) -> {
+                    // Kiterino start
+                    if (!new me.sosedik.kiterino.event.player.PlayerRemovesItemFromBundleEvent(((ServerPlayer) player).getBukkitEntity(), stack.asBukkitMirror(), itemStack.asBukkitMirror(), slot.getContainerSlot(), true).callEvent()) {
+                        add(stack, itemStack);
+                        return;
+                    }
+                    // Kiterino end
                     this.playRemoveOneSound(player);
                     cursorStackReference.set(itemStack);
                 });
             } else {
+                if (!new me.sosedik.kiterino.event.player.PlayerPutsItemInBundleEvent(((ServerPlayer) player).getBukkitEntity(), stack.asBukkitMirror(), otherStack.asBukkitMirror(), slot.getContainerSlot(), true).callEvent()) return true; // Kiterino
                 int i = add(stack, otherStack);
                 if (i > 0) {
                     this.playInsertSound(player);
@@ -87,6 +101,12 @@ public class BundleItem extends Item {
     @Override
     public InteractionResultHolder<ItemStack> use(Level world, Player user, InteractionHand hand) {
         ItemStack itemStack = user.getItemInHand(hand);
+        // Kiterino start
+        if (!new me.sosedik.kiterino.event.player.PlayerEmptyBundleEvent(((ServerPlayer) user).getBukkitEntity(), itemStack.asBukkitMirror(), hand == InteractionHand.MAIN_HAND ? org.bukkit.inventory.EquipmentSlot.HAND : org.bukkit.inventory.EquipmentSlot.OFF_HAND).callEvent()) {
+            ((ServerPlayer) user).getBukkitEntity().updateInventory();
+            return InteractionResultHolder.fail(itemStack);
+        }
+        // Kiterino end
         if (dropContents(itemStack, user)) {
             this.playDropContentsSound(user);
             user.awardStat(Stats.ITEM_USED.get(this));
@@ -119,7 +139,7 @@ public class BundleItem extends Item {
             }
 
             int i = getContentWeight(bundle);
-            int j = getWeight(stack);
+            int j = getWeight(bundle, stack); // Kiterino
             int k = Math.min(stack.getCount(), (64 - i) / j);
             if (k <= 0) { // Paper - prevent item addition on overfilled bundles
                 return 0;
@@ -168,9 +188,19 @@ public class BundleItem extends Item {
         }
     }
 
+    // Kiterino start
+    private static int getWeight(ItemStack bundle, ItemStack stack) {
+        int weight = getWeight(stack);
+        var event = new me.sosedik.kiterino.event.item.BundleResolveWeightEvent(bundle.asBukkitMirror(), stack.asBukkitMirror(), weight);
+        event.callEvent();
+        weight = event.getItemWeight();
+        return weight;
+    }
+    // Kiterino end
+
     private static int getContentWeight(ItemStack stack) {
         return getContents(stack).mapToInt((itemStack) -> {
-            return getWeight(itemStack) * itemStack.getCount();
+            return getWeight(stack, itemStack) * itemStack.getCount(); // Kiterino
         }).sum();
     }
 
