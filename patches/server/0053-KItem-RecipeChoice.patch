From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Thu, 13 Aug 2020 17:35:52 +0300
Subject: [PATCH] KItem RecipeChoice


diff --git a/src/main/java/net/minecraft/world/item/crafting/Ingredient.java b/src/main/java/net/minecraft/world/item/crafting/Ingredient.java
index 809c6531d056cc9538e9bec9cdc5ca6e4c9f4792..4108080a2075ad1e1a2300f0b00b7e3751d57542 100644
--- a/src/main/java/net/minecraft/world/item/crafting/Ingredient.java
+++ b/src/main/java/net/minecraft/world/item/crafting/Ingredient.java
@@ -39,6 +39,7 @@ public final class Ingredient implements Predicate<ItemStack> {
     private IntList stackingIds;
     public boolean exact; // CraftBukkit
     public Predicate<org.bukkit.inventory.ItemStack> predicate;
+    public boolean kItem; // Kiterino
 
     public Ingredient(Stream<? extends Ingredient.Value> entries) {
         this.values = (Ingredient.Value[]) entries.toArray((i) -> {
@@ -86,6 +87,25 @@ public final class Ingredient implements Predicate<ItemStack> {
                 for (int j = 0; j < i; ++j) {
                     ItemStack itemstack1 = aitemstack[j];
 
+                    // Kiterino start
+                    if (kItem) {
+                        var compound = itemstack1.getTag();
+                        String namespace = org.bukkit.Bukkit.getName();
+                        if (compound != null && compound.contains(namespace)) {
+                            compound = compound.getCompound(namespace);
+                            if (compound.contains("Id")) {
+                                var compound1 = itemstack.getTag();
+                                if (compound1 == null) continue;
+                                if (!compound1.contains(namespace)) continue;
+                                compound1 = compound1.getCompound(namespace);
+                                if (!compound1.contains("Id")) continue;
+                                if (!compound.getString("Id").equals(compound1.getString("Id"))) continue;
+                                return true;
+                            }
+                        }
+                    }
+                    // Kiterino end
+
                     // CraftBukkit start
                     if (this.exact) {
                         if (itemstack1.getItem() == itemstack.getItem() && ItemStack.tagMatches(itemstack, itemstack1)) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java
index eb893920e2520f6be1d13d9235cb0d326e4b05f8..20e7361dec168af2698d2b9c4cffc95b3bce6369 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftRecipe.java
@@ -28,6 +28,9 @@ public interface CraftRecipe extends Recipe {
             stack = new Ingredient(((RecipeChoice.ExactChoice) bukkit).getChoices().stream().map((mat) -> new net.minecraft.world.item.crafting.Ingredient.ItemValue(CraftItemStack.asNMSCopy(mat))));
             stack.exact = true;
             stack.predicate = ((RecipeChoice.ExactChoice) bukkit).getPredicate(); // Purpur
+        } else if (bukkit instanceof me.sosedik.kiterino.inventory.ItemChoice) {
+            stack = new Ingredient(((me.sosedik.kiterino.inventory.ItemChoice) bukkit).getChoices().stream().map((mat) -> new net.minecraft.world.item.crafting.Ingredient.ItemValue(CraftItemStack.asNMSCopy(mat))));
+            stack.kItem = true;
         } else {
             throw new IllegalArgumentException("Unknown recipe stack instance " + bukkit);
         }
@@ -47,6 +50,16 @@ public interface CraftRecipe extends Recipe {
             return null;
         }
 
+        // Kiterino start
+        if (list.kItem) {
+            List<org.bukkit.inventory.ItemStack> choices = new ArrayList<>(list.itemStacks.length);
+            for (net.minecraft.world.item.ItemStack i : list.itemStacks) {
+                choices.add(CraftItemStack.asBukkitCopy(i));
+            }
+            return new me.sosedik.kiterino.inventory.ItemChoice(choices);
+        }
+        // Kiterino end
+
         if (list.exact) {
             List<org.bukkit.inventory.ItemStack> choices = new ArrayList<>(list.itemStacks.length);
             for (net.minecraft.world.item.ItemStack i : list.itemStacks) {
