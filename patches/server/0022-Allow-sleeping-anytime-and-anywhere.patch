From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Mon, 29 Jun 2020 14:48:33 +0300
Subject: [PATCH] Allow sleeping anytime and anywhere


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index d7e781accb482ee119fc44604bb927513ad08c56..81d8880cc5afeb39e00b294128c23f8ebd7e2de3 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -842,8 +842,19 @@ public class ServerLevel extends Level implements WorldGenLevel {
                 if (!event.isCancelled()) {
                     this.setDayTime(this.getDayTime() + event.getSkipAmount());
                 }
+
+                // Kiterino start
+                if (!event.isCancelled()) {
+                    this.wakeUpAllPlayers();
+                }
+                // CraftBukkit end
+                if (this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE)) {
+                    this.resetWeatherCycle();
+                }
+                // Kiterino end
             }
 
+            /* Kiterino start - moved up
             if (!event.isCancelled()) {
                 this.wakeUpAllPlayers();
             }
@@ -851,6 +862,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             if (this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE) && this.isRaining()) {
                 this.resetWeatherCycle();
             }
+            */ // Kiterino end
         }
 
         this.updateSkyBrightness();
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 94b8d44af25379f4cf9f310335c02947a143beb4..acc14078c52ac74e8fc3d161a6b890a40c486d90 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1420,6 +1420,7 @@ public class ServerPlayer extends Player {
                 return Either.left(Player.BedSleepingProblem.OBSTRUCTED);
             } else {
                 this.setRespawnPosition(this.level().dimension(), blockposition, this.getYRot(), false, true, com.destroystokyo.paper.event.player.PlayerSetSpawnEvent.Cause.BED); // Paper - PlayerSetSpawnEvent
+                if (true) return Either.right(Unit.INSTANCE); // Kiterino - allow sleeping anytime
                 if (this.level().isDay()) {
                     return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_NOW);
                 } else {
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 20c3d3c9d2150574e9b4761dc1bda11cee04862f..8f7ac98f3054918e5a1624d03ce55e467fd4c0d5 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -292,7 +292,7 @@ public abstract class Player extends LivingEntity {
                 this.sleepCounter = 100;
             }
 
-            if (!this.level().isClientSide && this.level().isDay()) {
+            if (false && !this.level().isClientSide && this.level().isDay()) { // Kiterino - allow sleeping anytime and anywhere
                 this.stopSleepInBed(false, true);
             }
         } else if (this.sleepCounter > 0) {
