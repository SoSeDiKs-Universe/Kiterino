From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Thu, 8 Jul 2021 23:23:01 +0200
Subject: [PATCH] Weeper - Add marker support


diff --git a/src/main/java/com/github/weepingmc/packet/CraftPacketStepBuilder.java b/src/main/java/com/github/weepingmc/packet/CraftPacketStepBuilder.java
index a9ed797282bb721eacc97b3282923f1ec201961f..c95457ec05e92a94cf2a76f867668552bfa11f5f 100644
--- a/src/main/java/com/github/weepingmc/packet/CraftPacketStepBuilder.java
+++ b/src/main/java/com/github/weepingmc/packet/CraftPacketStepBuilder.java
@@ -3,6 +3,8 @@ package com.github.weepingmc.packet;
 import static com.github.weepingmc.packet.CraftPacketConversion.from;
 import static com.github.weepingmc.packet.CraftPacketConversion.mapPlayerAbilities;
 
+import java.awt.Color;
+import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
@@ -14,6 +16,11 @@ import java.util.concurrent.TimeUnit;
 
 import javax.annotation.Nonnull;
 
+import com.github.weepingmc.util.ColorUtil;
+import io.netty.buffer.ByteBuf;
+import io.netty.buffer.Unpooled;
+import net.minecraft.network.FriendlyByteBuf;
+import net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket;
 import org.bukkit.Location;
 import org.bukkit.block.data.BlockData;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
@@ -59,6 +66,8 @@ import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.player.Abilities;
 import net.minecraft.world.level.GameType;
 import net.minecraft.world.phys.Vec3;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
 
 public class CraftPacketStepBuilder implements PacketStepBuilder {
 
@@ -246,6 +255,17 @@ public class CraftPacketStepBuilder implements PacketStepBuilder {
 		return this;
 	}
 
+    @Override
+    public @NotNull PacketStepBuilder showTestMarker(@NotNull Location location, @NotNull Color color, @Nullable String text, int time) {
+        FriendlyByteBuf friendlyByteBuf = new FriendlyByteBuf(Unpooled.buffer());
+        friendlyByteBuf.writeBlockPos(BlockPos.of(location.toBlockKey()));
+        friendlyByteBuf.writeInt(ColorUtil.toARGB(color));
+        friendlyByteBuf.writeUtf(text==null?"": text);
+        friendlyByteBuf.writeInt(time);
+        initial.setNext(of(new ClientboundCustomPayloadPacket(ClientboundCustomPayloadPacket.DEBUG_GAME_TEST_ADD_MARKER, friendlyByteBuf)));
+        return this;
+    }
+
 	@Override
 	public void send(@Nonnull Collection<? extends org.bukkit.entity.Player> players){
 		initial.execute(players);
diff --git a/src/main/java/com/github/weepingmc/util/ColorUtil.java b/src/main/java/com/github/weepingmc/util/ColorUtil.java
new file mode 100644
index 0000000000000000000000000000000000000000..a64157dc0ac048837f82698900a60837880d776d
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/util/ColorUtil.java
@@ -0,0 +1,34 @@
+package com.github.weepingmc.util;
+
+import java.awt.Color;
+
+public class ColorUtil {
+
+        public static Color fromARGB(int argb){
+            return new Color(getR(argb), getG(argb), getB(argb), getA(argb));
+        }
+
+        public static int toARGB(Color color){
+            return getARBGInt(color.getAlpha(), color.getRed(), color.getGreen(), color.getBlue());
+        }
+
+        private static int getA(int argb) {
+            return (argb >> 24) & 0xFF;
+        }
+
+        private static int getR(int argb) {
+            return (argb >> 16) & 0xFF;
+        }
+
+        private static int getG(int argb) {
+            return (argb >> 8) & 0xFF;
+        }
+
+        private static int getB(int argb) {
+            return argb & 0xFF;
+        }
+
+        private static int getARBGInt(int a, int r, int g, int b) {
+            return ((a << 24) | 0xFF) + ((r << 16) | 0xFF) + ((g << 8) | 0xFF) + (b | 0xFF);
+        }
+}
