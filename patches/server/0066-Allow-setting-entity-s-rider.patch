From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Fri, 14 Oct 2022 09:41:48 +0300
Subject: [PATCH] Allow setting entity's rider


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 19976e223f94fb994924f65a7115f4b215368372..d1da4cf1acf74c111f0271d440278edb4aca3e9e 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -2833,6 +2833,20 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         return true; // CraftBukkit
     }
 
+    // Kiterino start
+    public boolean setRider(Player rider) {
+        if (!new org.spigotmc.event.entity.EntityMountEvent(rider.getBukkitEntity(), this.getBukkitEntity()).callEvent()) return false;
+        if (!rider.startRiding(this, true)) return false;
+        onMount(rider);
+        this.rider = rider;
+        return true;
+    }
+
+    public boolean hasRider() {
+        return getRider() != null;
+    }
+    // Kiterino end
+
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 5cd8fbb900aeca707973084a8734f44514669034..fec9c4c5972ea48c97911b22c51cf13035679e52 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1740,7 +1740,7 @@ public abstract class Mob extends LivingEntity {
     }
 
     public InteractionResult tryRide(Player player, InteractionHand hand) {
-        if (!isRidable()) {
+        if (!hasRider()) { // Kiterino
             return InteractionResult.PASS;
         }
         if (hand != InteractionHand.MAIN_HAND) {
@@ -1768,7 +1768,7 @@ public abstract class Mob extends LivingEntity {
                 return InteractionResult.PASS;
             }
         }
-        if (!player.getBukkitEntity().hasPermission("allow.ride." + getType().id)) {
+        if (isRidable() && !player.getBukkitEntity().hasPermission("allow.ride." + getType().id)) { // Kiterino
             player.sendMiniMessage(org.purpurmc.purpur.PurpurConfig.cannotRideMob);
             return InteractionResult.PASS;
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index ede4d01f59de68326c65bb1b08ce29ddb6fc94d5..df52d87acf1580814b8518c490e83cb2d3de7860 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1407,6 +1407,19 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return rider != null ? (org.bukkit.entity.Player) rider.getBukkitEntity() : null;
     }
 
+    // Kiterino start
+    @Override
+    public boolean setRider(org.bukkit.entity.Player rider, boolean dismount) {
+        var currentRider = getRider();
+        if (rider == currentRider) return true;
+        if (currentRider != null) {
+            if (!dismount) return false;
+            currentRider.leaveVehicle();
+        }
+        return getHandle().setRider(((CraftPlayer) rider).getHandle());
+    }
+    // Kiterino end
+
     @Override
     public boolean hasRider() {
         return getHandle().getRider() != null;
