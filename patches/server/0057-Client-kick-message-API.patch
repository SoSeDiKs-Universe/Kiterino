From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Wed, 2 Feb 2022 05:09:40 +0100
Subject: [PATCH] Client kick message API


diff --git a/src/main/java/net/minecraft/server/network/ServerCommonPacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerCommonPacketListenerImpl.java
index fa7f85303f9fe80a2e51740c376d9daedfaa60b4..980289b9345157f807496978b54bf87bbb464377 100644
--- a/src/main/java/net/minecraft/server/network/ServerCommonPacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerCommonPacketListenerImpl.java
@@ -308,6 +308,11 @@ public abstract class ServerCommonPacketListenerImpl implements ServerCommonPack
     }
 
     public void disconnect(net.kyori.adventure.text.Component reason, org.bukkit.event.player.PlayerKickEvent.Cause cause) { // Paper - kick event cause
+        // Kiterino start
+        disconnect(reason, reason, cause);
+    }
+    public void disconnect(net.kyori.adventure.text.Component reason, net.kyori.adventure.text.Component clientMessage, org.bukkit.event.player.PlayerKickEvent.Cause cause) { // Kiterino - add client message
+        // Kiterino end
         // Paper end
         // CraftBukkit start - fire PlayerKickEvent
         if (this.processedDisconnect) {
@@ -336,7 +341,7 @@ public abstract class ServerCommonPacketListenerImpl implements ServerCommonPack
 
         net.kyori.adventure.text.Component leaveMessage = net.kyori.adventure.text.Component.translatable("multiplayer.player.left", net.kyori.adventure.text.format.NamedTextColor.YELLOW, io.papermc.paper.configuration.GlobalConfiguration.get().messages.useDisplayNameInQuitMessage ? this.player.getBukkitEntity().displayName() : net.kyori.adventure.text.Component.text(this.player.getScoreboardName())); // Paper - Adventure
 
-        PlayerKickEvent event = new PlayerKickEvent(this.player.getBukkitEntity(), reason, leaveMessage, cause); // Paper - adventure
+        PlayerKickEvent event = new PlayerKickEvent(this.player.getBukkitEntity(), reason, leaveMessage, clientMessage, cause); // Paper - adventure // Kiterino - add client message
 
         if (this.cserver.getServer().isRunning()) {
             this.cserver.getPluginManager().callEvent(event);
@@ -347,14 +352,14 @@ public abstract class ServerCommonPacketListenerImpl implements ServerCommonPack
             return;
         }
         // Send the possibly modified leave message
-        final Component ichatbasecomponent = io.papermc.paper.adventure.PaperAdventure.asVanilla(event.reason()); // Paper - Adventure
+        final Component ichatbasecomponent = io.papermc.paper.adventure.PaperAdventure.asVanilla(event.clientMessage()); // Paper - Adventure // Kiterino - add client message
         // CraftBukkit end
 
         this.player.quitReason = org.bukkit.event.player.PlayerQuitEvent.QuitReason.KICKED; // Paper
         this.connection.send(new ClientboundDisconnectPacket(ichatbasecomponent), PacketSendListener.thenRun(() -> {
             this.connection.disconnect(ichatbasecomponent);
         }));
-        this.onDisconnect(ichatbasecomponent, event.leaveMessage()); // CraftBukkit - fire quit instantly // Paper - use kick event leave message
+        this.onDisconnect(io.papermc.paper.adventure.PaperAdventure.asVanilla(event.reason()), event.leaveMessage()); // CraftBukkit - fire quit instantly // Paper - use kick event leave message // Kiterino - add client message
         this.connection.setReadOnly();
         MinecraftServer minecraftserver = this.server;
         Connection networkmanager = this.connection;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 8d553be152bc76f042b240aa4a47034c22758481..92b6b45fbfa8a3dde5896b2ccc5ce9cc9a18ca4f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -3412,5 +3412,19 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
         return true;
     }
+
+    @Override
+    public void kick(net.kyori.adventure.text.Component reason, net.kyori.adventure.text.Component message) {
+        kick(reason, message, org.bukkit.event.player.PlayerKickEvent.Cause.PLUGIN);
+    }
+
+    @Override
+    public void kick(net.kyori.adventure.text.Component reason, net.kyori.adventure.text.Component message, org.bukkit.event.player.PlayerKickEvent.Cause cause) {
+        org.spigotmc.AsyncCatcher.catchOp("player kick");
+        final ServerGamePacketListenerImpl connection = this.getHandle().connection;
+        if (connection != null) {
+            connection.disconnect(reason == null ? net.kyori.adventure.text.Component.empty() : reason, message == null ? net.kyori.adventure.text.Component.empty() : message, cause);
+        }
+    }
     // Kiterino end
 }
