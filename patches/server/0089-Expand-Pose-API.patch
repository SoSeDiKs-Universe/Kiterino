From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Tue, 10 Jan 2023 00:40:34 +0200
Subject: [PATCH] Expand Pose API


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 5098766735c059de2d74aa92c9559a534a132ad6..9843494748cec6d0174f49f20d84806b61574609 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -406,6 +406,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     public boolean freezeLocked = false; // Paper - Freeze Tick Lock API
     public boolean collidingWithWorldBorder; // Paper
     public @Nullable Boolean immuneToFire = null; // Purpur - Fire immune API
+    public boolean fixedPose = false; // Kiterino
 
     public void setOrigin(@javax.annotation.Nonnull Location location) {
         this.origin = location.toVector();
@@ -758,6 +759,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     public void onClientRemoval() {}
 
     public void setPose(net.minecraft.world.entity.Pose pose) {
+        // Kiterino start
+        if (fixedPose) {
+            return;
+        }
+        // Kiterino end
         // CraftBukkit start
         if (pose == this.getPose()) {
             return;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index c942ced95959fef8374878460dfeaaa4eb2472ec..bcb4abb2265a52d55d22c89ca4e1a1d8fdb9a1a7 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1496,5 +1496,18 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
     public UUID getSpawningPlayerUuid() {
         return getHandle().spawningPlayerUuid;
     }
+
+    @Override
+    public void setPose(Pose pose, boolean fixed) {
+        Preconditions.checkNotNull(pose, "Pose cannot be null");
+        getHandle().fixedPose = false;
+        getHandle().setPose(net.minecraft.world.entity.Pose.values()[pose.ordinal()]);
+        getHandle().fixedPose = fixed;
+    }
+
+    @Override
+    public boolean hasFixedPose() {
+        return getHandle().fixedPose;
+    }
     // Kiterino end
 }
