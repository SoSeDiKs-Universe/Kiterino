From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Tue, 11 Oct 2022 14:28:39 +0300
Subject: [PATCH] Paper PR - Fire ServerListPingEvent for secondary motd send


diff --git a/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java b/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java
index 4c2351b03b58511b80017b58ee9b20ab5193adc9..5844cfc5ea8481133e9706c06ff440089495fc01 100644
--- a/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java
+++ b/src/main/java/com/destroystokyo/paper/network/StandardPaperServerListPingEventImpl.java
@@ -74,13 +74,24 @@ public final class StandardPaperServerListPingEventImpl extends PaperServerListP
 
     @SuppressWarnings("deprecation")
     public static void processRequest(MinecraftServer server, Connection networkManager) {
+        ServerStatus ping = getEventResponse(server, networkManager);
+
+        if (ping == null) {
+            networkManager.disconnect(null);
+            return;
+        }
+
+        // Send response
+        networkManager.send(new ClientboundStatusResponsePacket(ping));
+    }
+
+    public static ServerStatus getEventResponse(MinecraftServer server, Connection networkManager) {
         StandardPaperServerListPingEventImpl event = new StandardPaperServerListPingEventImpl(server, networkManager, server.getStatus());
         server.server.getPluginManager().callEvent(event);
 
         // Close connection immediately if event is cancelled
         if (event.isCancelled()) {
-            networkManager.disconnect(null);
-            return;
+            return null;
         }
 
         // Setup response
@@ -103,8 +114,10 @@ public final class StandardPaperServerListPingEventImpl extends PaperServerListP
             ping.setFavicon(event.getServerIcon().getData());
         }
 
-        // Send response
-        networkManager.send(new ClientboundStatusResponsePacket(ping));
+        // Other
+        ping.setEnforcesSecureChat(server.enforceSecureProfile());
+
+        return ping;
     }
 
 }
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 974f6b0f1ee2d2ff8ad589d1f91e3b3a9cc4de3b..e4bcf46b341cf9f49a38f1c4a9a3e48db55702d8 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -296,7 +296,13 @@ public abstract class PlayerList {
         Component joinMessage = ichatmutablecomponent; // Paper - Adventure
 
         playerconnection.teleport(player.getX(), player.getY(), player.getZ(), player.getYRot(), player.getXRot());
-        player.sendServerStatus(this.server.getStatus());
+        // Paper start - fire ServerListPingEvent
+        io.papermc.paper.util.MCUtil.scheduleAsyncTask(() -> {
+            if (player.hasDisconnected()) return;
+            net.minecraft.network.protocol.status.ServerStatus status = com.destroystokyo.paper.network.StandardPaperServerListPingEventImpl.getEventResponse(this.server, player.connection.connection);
+            if (status != null) player.sendServerStatus(status);
+        });
+        // Paper end
         player.connection.send(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(this.players));
         this.players.add(player);
         this.playersByName.put(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT), player); // Spigot
