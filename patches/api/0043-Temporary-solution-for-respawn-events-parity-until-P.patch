From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Thu, 12 Jan 2023 04:23:23 +0200
Subject: [PATCH] Temporary solution for respawn events parity until Paper PR
 8705 is merged


diff --git a/src/main/java/com/destroystokyo/paper/event/player/PlayerPostRespawnEvent.java b/src/main/java/com/destroystokyo/paper/event/player/PlayerPostRespawnEvent.java
index 16961aac061e78fb84029f8435ab5f7c493b1362..03b8ed071fbcf549bc72ab0492e3d23af036a1ea 100644
--- a/src/main/java/com/destroystokyo/paper/event/player/PlayerPostRespawnEvent.java
+++ b/src/main/java/com/destroystokyo/paper/event/player/PlayerPostRespawnEvent.java
@@ -16,12 +16,24 @@ public class PlayerPostRespawnEvent extends PlayerEvent {
 
     private final Location respawnedLocation;
     private final boolean isBedSpawn;
+    private final boolean isAnchorSpawn;
+    private final java.util.Set<org.bukkit.event.player.PlayerRespawnEvent.RespawnFlag> respawnFlags;
 
     @ApiStatus.Internal
+    @Deprecated
     public PlayerPostRespawnEvent(@NotNull final Player respawnPlayer, @NotNull final Location respawnedLocation, final boolean isBedSpawn) {
+        this(respawnPlayer, respawnedLocation, isBedSpawn, false, com.google.common.collect.ImmutableSet.builder());
+    }
+
+    @ApiStatus.Internal
+    public PlayerPostRespawnEvent(@NotNull final Player respawnPlayer, @NotNull final Location respawnedLocation, final boolean isBedSpawn, final boolean isAnchorSpawn, @NotNull com.google.common.collect.ImmutableSet.Builder<org.bukkit.event.player.PlayerRespawnEvent.RespawnFlag> respawnFlags) {
         super(respawnPlayer);
         this.respawnedLocation = respawnedLocation;
         this.isBedSpawn = isBedSpawn;
+        this.isAnchorSpawn = isAnchorSpawn;
+        if (this.isBedSpawn) { respawnFlags.add(org.bukkit.event.player.PlayerRespawnEvent.RespawnFlag.BED_SPAWN); }
+        if (this.isAnchorSpawn) { respawnFlags.add(org.bukkit.event.player.PlayerRespawnEvent.RespawnFlag.ANCHOR_SPAWN); }
+        this.respawnFlags = respawnFlags.build();
     }
 
     /**
@@ -43,6 +55,25 @@ public class PlayerPostRespawnEvent extends PlayerEvent {
         return this.isBedSpawn;
     }
 
+    /**
+     * Gets whether the respawn location is the player's respawn anchor.
+     *
+     * @return true if the respawn location is the player's respawn anchor.
+     */
+    public boolean isAnchorSpawn() {
+        return isAnchorSpawn;
+    }
+
+    /**
+     * Get the set of flags that apply to this respawn.
+     *
+     * @return an immutable set of the flags that apply to this respawn
+     */
+    @NotNull
+    public java.util.Set<org.bukkit.event.player.PlayerRespawnEvent.RespawnFlag> getRespawnFlags() {
+        return respawnFlags;
+    }
+
     @Override
     @NotNull
     public HandlerList getHandlers() {
