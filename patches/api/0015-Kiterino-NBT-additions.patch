From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Sun, 13 Feb 2022 06:28:00 +0100
Subject: [PATCH] Kiterino NBT additions


diff --git a/src/main/java/org/bukkit/block/Block.java b/src/main/java/org/bukkit/block/Block.java
index 0f5b1f641016d2a92d2efca4765f2b2ba2f51dfd..ac1534c601b79446075c46fc476f9aa2dbcc6f53 100644
--- a/src/main/java/org/bukkit/block/Block.java
+++ b/src/main/java/org/bukkit/block/Block.java
@@ -806,5 +806,16 @@ public interface Block extends Metadatable, Translatable, net.kyori.adventure.tr
     default de.tr7zw.changeme.nbtapi.NBTCompound getNBTC() {
         return getNBT().getData();
     }
+
+    /**
+     * Returns a custom tag container of this chunk under
+     * Kiterino namespace.
+     *
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getKNBT() {
+        return getNBTC().getOrCreateCompound(org.bukkit.Bukkit.getName());
+    }
     // Kiterino end
 }
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index 62ed2930d5b4db3bddbc08f57d4676af8630ec78..cf59b969fc7973f386385a3bb972dfa66fc86eb6 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -1661,5 +1661,72 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     public void modifyNbt(@NotNull java.util.function.Consumer<de.tr7zw.changeme.nbtapi.iface.@NotNull ReadWriteItemNBT> consumer) {
         de.tr7zw.changeme.nbtapi.NBT.modify(this, consumer);
     }
+
+    /**
+     * Returns read-only nbt of the item under Kiterino namespace
+     *
+     * @return item's NBT tags container under Kiterino namespace
+     */
+    public @NotNull de.tr7zw.changeme.nbtapi.iface.ReadableNBT readKNbt() {
+        String kiterinoTag = Bukkit.getName();
+        return de.tr7zw.changeme.nbtapi.NBT.get(this, nbt -> nbt.hasTag(kiterinoTag) ? nbt.getCompound(kiterinoTag) : new de.tr7zw.changeme.nbtapi.NBTContainer());
+    }
+
+    /**
+     * Gets data from item's nbt under Kiterino namespace
+     *
+     * @param function function that will be applied to the item's tag container
+     * @return return value of the function
+     * @param <T> parameter
+     */
+    public <T> @UndefinedNullability T getKNbt(@NotNull java.util.function.Function<de.tr7zw.changeme.nbtapi.iface.@NotNull ReadableNBT, @Nullable T> function) {
+        return de.tr7zw.changeme.nbtapi.NBT.get(this, nbt -> {
+            String kiterinoTag = Bukkit.getName();
+            return function.apply(nbt.hasTag(kiterinoTag) ? nbt.getCompound(kiterinoTag) : new de.tr7zw.changeme.nbtapi.NBTContainer());
+        });
+    }
+
+    /**
+     * Modifies tag container of the item under Kiterino namespace
+     *
+     * @param function function that will be applied to the tag container
+     * @return return value of the function
+     * @param <T> parameter
+     */
+    public <T> @UndefinedNullability T modifyAndGetKNbt(@NotNull java.util.function.Function<de.tr7zw.changeme.nbtapi.iface.@NotNull ReadWriteNBT, @Nullable T> function) {
+        return de.tr7zw.changeme.nbtapi.NBT.modify(this, nbt -> {
+            return function.apply(nbt.getOrCreateCompound(Bukkit.getName()));
+        });
+    }
+
+    /**
+     * Modifies tag container of the item
+     *
+     * @param consumer consumer that will be used to modify the item's tag container
+     */
+    public void modifyKNbt(@NotNull java.util.function.Consumer<de.tr7zw.changeme.nbtapi.iface.@NotNull ReadWriteNBT> consumer) {
+        de.tr7zw.changeme.nbtapi.NBT.modify(this, nbt -> {
+            consumer.accept(nbt.getOrCreateCompound(Bukkit.getName()));
+        });
+    }
+
+    /**
+     * Returns custom item ID if present.
+     *
+     * @return ID if present
+     */
+    public @Nullable String subtractId() {
+        if (isEmpty(this)) return null;
+        return de.tr7zw.changeme.nbtapi.NBT.get(this, nbt -> nbt.getOrNull("Id", String.class));
+    }
+
+    /**
+     * Checks whether this item has Kiterino ID tag.
+     *
+     * @return true if item has Kiterino tag
+     */
+    public boolean isKItem() {
+        return subtractId() != null;
+    }
     // Kiterino end
 }
diff --git a/src/main/java/org/bukkit/persistence/PersistentDataContainer.java b/src/main/java/org/bukkit/persistence/PersistentDataContainer.java
index d0d06aeecf72e0241d373cd4f7cc53eae984f630..5ac8169cf6a61da2d56ae7eeb0e1b5c9ac754f43 100644
--- a/src/main/java/org/bukkit/persistence/PersistentDataContainer.java
+++ b/src/main/java/org/bukkit/persistence/PersistentDataContainer.java
@@ -209,5 +209,15 @@ public interface PersistentDataContainer {
     default de.tr7zw.changeme.nbtapi.NBTPersistentDataContainer getNBTC() {
         return new de.tr7zw.changeme.nbtapi.NBTPersistentDataContainer(this);
     }
+
+    /**
+     * Returns a custom tag container under Kiterino namespace.
+     *
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getKNBT() {
+        return getNBTC().getOrCreateCompound(org.bukkit.Bukkit.getName());
+    }
     // Kiterino end
 }
diff --git a/src/main/java/org/bukkit/persistence/PersistentDataHolder.java b/src/main/java/org/bukkit/persistence/PersistentDataHolder.java
index b20272a346937763e78a13369f925e56d46ae4ac..01ed942370c77c05d45b685049c75f4f1358cb1a 100644
--- a/src/main/java/org/bukkit/persistence/PersistentDataHolder.java
+++ b/src/main/java/org/bukkit/persistence/PersistentDataHolder.java
@@ -30,6 +30,16 @@ public interface PersistentDataHolder {
     default de.tr7zw.changeme.nbtapi.NBTPersistentDataContainer getNBTC() {
         return getPersistentDataContainer().getNBTC();
     }
+
+    /**
+     * Returns a custom tag container under Kiterino namespace.
+     *
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getKNBT() {
+        return getNBTC().getOrCreateCompound(org.bukkit.Bukkit.getName());
+    }
     // Kiterino end
 
 }
