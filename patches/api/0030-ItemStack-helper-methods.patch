From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Thu, 13 Aug 2020 17:12:31 +0300
Subject: [PATCH] ItemStack helper methods


diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index b28dfd6d490e618b3d0149ccff188fe4ee009c39..29c40edbdb5e724c7aa38495c8a80b90d246edb9 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -1687,4 +1687,75 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, net.kyor
         return getNBT(directApply).getOrCreateCompound(Bukkit.getName());
     }
     // Kiterino end
+
+    // Kiterino start
+    /**
+     * Returns custom item ID if present.
+     *
+     * @return ID if present
+     */
+    @Nullable
+    public String subtractId() {
+        if (isEmpty(this)) return null;
+        de.tr7zw.changeme.nbtapi.NBTCompound nbt = getKNBT();
+        return nbt.hasKey("Id") ? nbt.getString("Id") : null;
+    }
+
+    /**
+     * Checks whether this item has Kiterino ID tag.
+     *
+     * @return true if item has Kiterino tag
+     */
+    public boolean isKItem() {
+        return subtractId() != null;
+    }
+
+    /**
+     * Returns clone of this item with colored
+     * {@link org.bukkit.inventory.meta.LeatherArmorMeta}.
+     *
+     * @param color color
+     * @return colored item
+     */
+    public @NotNull ItemStack asColor(@NotNull org.bukkit.DyeColor color) {
+        return asColor(color.getColor());
+    }
+
+    /**
+     * Returns clone of this item with colored
+     * {@link org.bukkit.inventory.meta.LeatherArmorMeta}.
+     *
+     * @param color color
+     * @return colored item
+     */
+    public @NotNull ItemStack asColor(@NotNull org.bukkit.Color color) {
+        ItemStack clone = clone();
+        if (meta instanceof org.bukkit.inventory.meta.LeatherArmorMeta leatherMeta) {
+            leatherMeta.setColor(color);
+            clone.setItemMeta(leatherMeta);
+        }
+        return clone;
+    }
+
+    /**
+     * Checks if item is null or AIR.
+     *
+     * @param item item to check
+     * @return whether item is null or AIR
+     */
+    public static boolean isEmpty(@Nullable ItemStack item) {
+        return item == null || item.getType() == Material.AIR;
+    }
+
+    /**
+     * Checks if item is not null and has provided {@link Material}.
+     *
+     * @param item item to check
+     * @param type required type
+     * @return whether item is the same type
+     */
+    public static boolean isType(@Nullable ItemStack item, @NotNull Material type) {
+        return item != null && item.getType() == type;
+    }
+    // Kiterino end
 }
