From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Thu, 13 Aug 2020 17:12:31 +0300
Subject: [PATCH] ItemStack helper methods


diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index 014c53779e776732a5c754b85fe506fd366b2cc2..42fbe97f4cba5f419aae1e442c0ee912c2bf65d0 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -1775,4 +1775,81 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
         return subtractId() != null;
     }
     // Kiterino end
+
+    // Kiterino start
+    /**
+     * Returns clone of this item with colored
+     * {@link org.bukkit.inventory.meta.LeatherArmorMeta} or {@link org.bukkit.inventory.meta.PotionMeta}.
+     *
+     * @param hex hex string starting with #
+     * @return colored item
+     */
+    public @NotNull ItemStack asColor(@NotNull String hex) {
+        return asColor(net.kyori.adventure.text.format.TextColor.fromHexString(hex));
+    }
+
+    /**
+     * Returns clone of this item with colored
+     * {@link org.bukkit.inventory.meta.LeatherArmorMeta} or {@link org.bukkit.inventory.meta.PotionMeta}.
+     *
+     * @param color color
+     * @return colored item
+     */
+    public @NotNull ItemStack asColor(@NotNull org.bukkit.DyeColor color) {
+        return asColor(color.getColor());
+    }
+
+    /**
+     * Returns clone of this item with colored
+     * {@link org.bukkit.inventory.meta.LeatherArmorMeta} or {@link org.bukkit.inventory.meta.PotionMeta}.
+     *
+     * @param color color
+     * @return colored item
+     */
+    public @NotNull ItemStack asColor(@NotNull net.kyori.adventure.util.RGBLike color) {
+        return asColor(org.bukkit.Color.fromRGB(color.red(), color.green(), color.blue()));
+    }
+
+    /**
+     * Returns clone of this item with colored
+     * {@link org.bukkit.inventory.meta.LeatherArmorMeta} or {@link org.bukkit.inventory.meta.PotionMeta}.
+     *
+     * @param color color
+     * @return colored item
+     */
+    public @NotNull ItemStack asColor(@NotNull org.bukkit.Color color) {
+        ItemStack clone = clone();
+        if (clone.getItemMeta() instanceof org.bukkit.inventory.meta.LeatherArmorMeta leatherMeta) {
+            leatherMeta.setColor(color);
+            clone.setItemMeta(leatherMeta);
+        } else if (clone.getItemMeta() instanceof org.bukkit.inventory.meta.PotionMeta potionMeta) {
+            potionMeta.setColor(color);
+            clone.setItemMeta(potionMeta);
+        }
+        return clone;
+    }
+
+    /**
+     * Checks if item is null or AIR.
+     *
+     * @param item item to check
+     * @return whether item is null or AIR
+     */
+    @org.jetbrains.annotations.Contract("null -> true")
+    public static boolean isEmpty(@Nullable ItemStack item) {
+        return item == null || item.getType() == Material.AIR;
+    }
+
+    /**
+     * Checks if item is not null and has provided {@link Material}.
+     *
+     * @param item item to check
+     * @param type required type
+     * @return whether item is the same type
+     */
+    @org.jetbrains.annotations.Contract("null, _ -> false")
+    public static boolean isType(@Nullable ItemStack item, @NotNull Material type) {
+        return item != null && item.getType() == type;
+    }
+    // Kiterino end
 }
