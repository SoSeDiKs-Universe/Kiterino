From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Sun, 13 Feb 2022 06:28:00 +0100
Subject: [PATCH] Kiterino NBT additions


diff --git a/src/main/java/org/bukkit/block/Block.java b/src/main/java/org/bukkit/block/Block.java
index 145bf1031b3d6f7c83e6f800d16dd1c98c396f61..66de1889c4e54995ce5dff68ad6fbe0b5410e097 100644
--- a/src/main/java/org/bukkit/block/Block.java
+++ b/src/main/java/org/bukkit/block/Block.java
@@ -766,5 +766,16 @@ public interface Block extends Metadatable, net.kyori.adventure.translation.Tran
     default de.tr7zw.changeme.nbtapi.NBTCompound getNBTC() {
         return getNBT().getData();
     }
+
+    /**
+     * Returns a custom tag container of this chunk under
+     * Kiterino namespace.
+     *
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getKNBT() {
+        return getNBTC().getOrCreateCompound(org.bukkit.Bukkit.getName());
+    }
     // Kiterino end
 }
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index 791c3c7d75f373f6fa38c549b3d5d9d6181ae4b9..c10244e984afec20ecfdb0056a99e39d9d7a26ea 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -1637,6 +1637,29 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, net.kyor
         return new de.tr7zw.changeme.nbtapi.NBTItem(this, directApply);
     }
 
+    /**
+     * Returns a custom tag container of this item under
+     * Kiterino namespace.
+     *
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    public de.tr7zw.changeme.nbtapi.NBTCompound getKNBT() {
+        return getKNBT(false);
+    }
+
+    /**
+     * Returns a custom tag container of this item under
+     * Kiterino namespace.
+     *
+     * @param directApply if true, changes to NBTCompound will affect this ItemStack
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    public de.tr7zw.changeme.nbtapi.NBTCompound getKNBT(boolean directApply) {
+        return getNBT(directApply).getOrCreateCompound(Bukkit.getName());
+    }
+
     /**
      * Applies NBT data from the provided NBT item.
      *
diff --git a/src/main/java/org/bukkit/persistence/PersistentDataContainer.java b/src/main/java/org/bukkit/persistence/PersistentDataContainer.java
index e5e558a02fafaf2dcddb0cf18c27626aeb0e17cb..1e87e1d6981e9feef85e5a3a7869e3c96be139d8 100644
--- a/src/main/java/org/bukkit/persistence/PersistentDataContainer.java
+++ b/src/main/java/org/bukkit/persistence/PersistentDataContainer.java
@@ -176,5 +176,15 @@ public interface PersistentDataContainer {
     default de.tr7zw.changeme.nbtapi.NBTPersistentDataContainer getNBTC() {
         return new de.tr7zw.changeme.nbtapi.NBTPersistentDataContainer(this);
     }
+
+    /**
+     * Returns a custom tag container under Kiterino namespace.
+     *
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getKNBT() {
+        return getNBTC().getOrCreateCompound(org.bukkit.Bukkit.getName());
+    }
     // Kiterino end
 }
diff --git a/src/main/java/org/bukkit/persistence/PersistentDataHolder.java b/src/main/java/org/bukkit/persistence/PersistentDataHolder.java
index b20272a346937763e78a13369f925e56d46ae4ac..01ed942370c77c05d45b685049c75f4f1358cb1a 100644
--- a/src/main/java/org/bukkit/persistence/PersistentDataHolder.java
+++ b/src/main/java/org/bukkit/persistence/PersistentDataHolder.java
@@ -30,6 +30,16 @@ public interface PersistentDataHolder {
     default de.tr7zw.changeme.nbtapi.NBTPersistentDataContainer getNBTC() {
         return getPersistentDataContainer().getNBTC();
     }
+
+    /**
+     * Returns a custom tag container under Kiterino namespace.
+     *
+     * @return custom NBT tags container under Kiterino namespace
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getKNBT() {
+        return getNBTC().getOrCreateCompound(org.bukkit.Bukkit.getName());
+    }
     // Kiterino end
 
 }
