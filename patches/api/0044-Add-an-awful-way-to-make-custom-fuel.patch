From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Thu, 15 Dec 2022 20:10:57 +0200
Subject: [PATCH] Add an awful way to make custom fuel


diff --git a/src/main/java/me/sosedik/kiterino/event/block/FuelCheckEvent.java b/src/main/java/me/sosedik/kiterino/event/block/FuelCheckEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..dd939065a8196eaf60de11e67aff0a43c2460b00
--- /dev/null
+++ b/src/main/java/me/sosedik/kiterino/event/block/FuelCheckEvent.java
@@ -0,0 +1,57 @@
+package me.sosedik.kiterino.event.block;
+
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Super awful way to make custom fuel!
+ */
+public class FuelCheckEvent extends Event {
+
+    private static final HandlerList handlers = new HandlerList();
+    private final ItemStack fuel;
+    private boolean isFuel = false;
+
+    public FuelCheckEvent(@NotNull ItemStack fuel) {
+        this.fuel = fuel;
+    }
+
+    /**
+     * Get the checking item.
+     *
+     * @return possible fuel item
+     */
+    public final @NotNull ItemStack getFuel() {
+        return fuel;
+    }
+
+    /**
+     * Check if item was marked as fuel.
+     *
+     * @return whether item marked as fuel or not
+     */
+    public boolean isFuel() {
+        return isFuel;
+    }
+
+    /**
+     * Set whether this item is a fuel
+     *
+     * @param isFuel whether this item is a fuel
+     */
+    public void setIsFuel(boolean isFuel) {
+        this.isFuel = isFuel;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static @NotNull HandlerList getHandlerList() {
+        return handlers;
+    }
+
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 2921887e2e4302f50ddef65dd01e0ffc0d973910..f279f99e9de25637f5affae35160673072b95ec0 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -2512,6 +2512,28 @@ public final class Bukkit {
         server.removeFuel(material);
     }
 
+    // Kiterino start
+    /**
+     * Check whether this material can be used as fuel for furnaces
+     *
+     * @param type type
+     * @return whether provided material is fuel
+     */
+    public static boolean isFuel(@NotNull Material type) {
+        return server.isFuel(type);
+    }
+
+    /**
+     * Check whether this item can be used as fuel for furnaces
+     *
+     * @param item item
+     * @return whether provided item is fuel
+     */
+    public static boolean isFuel(@NotNull ItemStack item) {
+        return server.isFuel(item);
+    }
+    // Kiterino end
+
     /**
      * Creates debug block highlight on specified block location and show it to all players on the server.
      * <p>
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 652c5a08bcf9010f2b98b4f5b77093459d777dab..3e55d4a8142858606a98eb03a2c495196b17e199 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -2196,6 +2196,26 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      */
     public void removeFuel(@NotNull Material material);
 
+    // Kiterino start
+    /**
+     * Check whether this material can be used as fuel for furnaces
+     *
+     * @param type type
+     * @return whether provided material is fuel
+     */
+    default boolean isFuel(@NotNull Material type) {
+        return isFuel(new ItemStack(type));
+    }
+
+    /**
+     * Check whether this item can be used as fuel for furnaces
+     *
+     * @param item item
+     * @return whether provided item is fuel
+     */
+    boolean isFuel(@NotNull ItemStack item);
+    // Kiterino end
+
     /**
      * Creates debug block highlight on specified block location and show it to all players on the server.
      * <p>
