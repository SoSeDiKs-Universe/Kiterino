From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Tue, 10 Jan 2023 00:40:35 +0200
Subject: [PATCH] Expand Pose API


diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index 4428d9b892586fb3c4e1ed8e8746a01053703031..c43f46f411fd24349e85d9c6fb1f49a1bbd03173 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -1146,5 +1146,44 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
      */
     @Nullable
     UUID getSpawningPlayerUuid();
+
+    /**
+     * Sets the entity's current {@link Pose}.
+     *
+     * <p>Note: While posses affect some things like hitboxes,
+     * they do not change the entity's state
+     * (e.g. having {@link Pose#SNEAKING} does not
+     * guarantee {@link #isSneaking()} being {@code true}).
+     *
+     * <p>If applied to the {@link Player}, they might see a different pose client-side.
+     *
+     * @param pose a new {@link Pose}
+     * @see #setPose(Pose, boolean)
+     */
+    default void setPose(@NotNull Pose pose) {
+        setPose(pose, false);
+    }
+
+    /**
+     * Sets the entity's current {@link Pose}.
+     *
+     * <p>Note: While posses affect some things like hitboxes,
+     * they do not change the entity's state
+     * (e.g. having {@link Pose#SNEAKING} does not
+     * guarantee {@link #isSneaking()} being {@code true}).
+     *
+     * <p>If applied to the {@link Player}, they might see a different pose client-side.
+     *
+     * @param pose a new {@link Pose}
+     * @param fixed whether the new {@link Pose} should stay until manually changed
+     */
+    void setPose(@NotNull Pose pose, boolean fixed);
+
+    /**
+     * Checks whether the entity has a fixed {@link Pose}
+     *
+     * @return whether the entity has a fixed {@link Pose}
+     */
+    boolean hasFixedPose();
     // Kiterino end
 }
