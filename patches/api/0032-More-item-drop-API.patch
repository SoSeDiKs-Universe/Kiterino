From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Thu, 17 Mar 2022 19:05:46 +0200
Subject: [PATCH] More item drop API


diff --git a/src/main/java/org/bukkit/block/Block.java b/src/main/java/org/bukkit/block/Block.java
index dc157fb4dbe88b9d025b1e3da154ad9246857a2c..45395429886b458b444267498e21ea075b23dfb4 100644
--- a/src/main/java/org/bukkit/block/Block.java
+++ b/src/main/java/org/bukkit/block/Block.java
@@ -844,5 +844,53 @@ public interface Block extends Metadatable, Translatable, net.kyori.adventure.tr
     default void playSound(@NotNull org.bukkit.Sound sound, @NotNull org.bukkit.SoundCategory category, float volume, float pitch) {
         getWorld().playSound(getLocation().toCenterLocation(), sound, category, volume, pitch);
     }
+
+    /**
+     * Drops an item at the location of the block.
+     *
+     * @param item ItemStack to drop
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default org.bukkit.entity.Item dropItem(@NotNull ItemStack item) {
+        return getWorld().dropItem(getLocation().toCenterLocation(), item);
+    }
+
+    /**
+     * Drops an item at the location of the block.
+     * Note that functions will run before the entity is spawned
+     *
+     * @param item ItemStack to drop
+     * @param function the function to be run before the entity is spawned.
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default org.bukkit.entity.Item dropItem(@NotNull ItemStack item, @Nullable org.bukkit.util.Consumer<org.bukkit.entity.Item> function) {
+        return getWorld().dropItem(getLocation().toCenterLocation(), item, function);
+    }
+
+    /**
+     * Drops an item at the location of the block with a random offset
+     *
+     * @param item ItemStack to drop
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default org.bukkit.entity.Item dropItemNaturally(@NotNull ItemStack item) {
+        return getWorld().dropItemNaturally(getLocation().toCenterLocation(), item);
+    }
+
+    /**
+     * Drops an item at the location of the block with a random offset
+     * Note that functions will run before the entity is spawned
+     *
+     * @param item ItemStack to drop
+     * @param function the function to be run before the entity is spawned.
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default org.bukkit.entity.Item dropItemNaturally(@NotNull ItemStack item, @Nullable org.bukkit.util.Consumer<org.bukkit.entity.Item> function) {
+        return getWorld().dropItem(getLocation().toCenterLocation(), item, function);
+    }
     // Kiterino end
 }
diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index c2828a70a37f09001d39bc2a3b4ccccc00b9d5e2..110a491c5fd6188c19bdbbfbe6005802d92d8272 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -1048,5 +1048,53 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
     default void playSound(@NotNull org.bukkit.Sound sound, @NotNull org.bukkit.SoundCategory category, float volume, float pitch) {
         getWorld().playSound(getLocation(), sound, category, volume, pitch);
     }
+
+    /**
+     * Drops an item at the location of the entity.
+     *
+     * @param item ItemStack to drop
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default Item dropItem(@NotNull org.bukkit.inventory.ItemStack item) {
+        return getWorld().dropItem(getLocation(), item);
+    }
+
+    /**
+     * Drops an item at the location of the entity.
+     * Note that functions will run before the entity is spawned
+     *
+     * @param item ItemStack to drop
+     * @param function the function to be run before the entity is spawned.
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default Item dropItem(@NotNull org.bukkit.inventory.ItemStack item, @Nullable org.bukkit.util.Consumer<Item> function) {
+        return getWorld().dropItem(getLocation(), item, function);
+    }
+
+    /**
+     * Drops an item at the location of the entity with a random offset
+     *
+     * @param item ItemStack to drop
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default Item dropItemNaturally(@NotNull org.bukkit.inventory.ItemStack item) {
+        return getWorld().dropItemNaturally(getLocation(), item);
+    }
+
+    /**
+     * Drops an item at the location of the entity with a random offset
+     * Note that functions will run before the entity is spawned
+     *
+     * @param item ItemStack to drop
+     * @param function the function to be run before the entity is spawned.
+     * @return ItemDrop entity created as a result of this method
+     */
+    @NotNull
+    default Item dropItemNaturally(@NotNull org.bukkit.inventory.ItemStack item, @Nullable org.bukkit.util.Consumer<Item> function) {
+        return getWorld().dropItem(getLocation(), item, function);
+    }
     // Kiterino end
 }
