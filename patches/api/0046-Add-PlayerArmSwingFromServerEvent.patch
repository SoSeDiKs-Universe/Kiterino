From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoSeDiK <mrsosedik@gmail.com>
Date: Wed, 28 Dec 2022 18:24:54 +0200
Subject: [PATCH] Add PlayerArmSwingFromServerEvent


diff --git a/src/main/java/me/sosedik/kiterino/event/player/PlayerArmSwingFromServerEvent.java b/src/main/java/me/sosedik/kiterino/event/player/PlayerArmSwingFromServerEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..c40e08922c772e3cdbb93598084884b37bb531a3
--- /dev/null
+++ b/src/main/java/me/sosedik/kiterino/event/player/PlayerArmSwingFromServerEvent.java
@@ -0,0 +1,64 @@
+package me.sosedik.kiterino.event.player;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerAnimationEvent;
+import org.bukkit.event.player.PlayerAnimationType;
+import org.bukkit.inventory.EquipmentSlot;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Called when the server requests the player to swing their hand
+ */
+public class PlayerArmSwingFromServerEvent extends PlayerAnimationEvent implements Cancellable {
+
+    private static final HandlerList handlers = new HandlerList();
+
+    private final EquipmentSlot equipmentSlot;
+    private boolean cancelled;
+
+    public PlayerArmSwingFromServerEvent(@NotNull Player player, @NotNull EquipmentSlot equipmentSlot) {
+        super(player, equipmentSlot == EquipmentSlot.HAND ? PlayerAnimationType.ARM_SWING : PlayerAnimationType.OFF_ARM_SWING);
+        this.equipmentSlot = equipmentSlot;
+        this.cancelled = false;
+    }
+
+    /**
+     * Returns the hand of the arm swing.
+     *
+     * @return the hand
+     */
+    public @NotNull EquipmentSlot getHand() {
+        return this.equipmentSlot;
+    }
+
+    /**
+     * @return if cancelled, the hand will not be swung
+     */
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    /**
+     * Set whether to cancel item use. If canceled,
+     * the hand will not be swung.
+     *
+     * @param cancel true if you wish to cancel this event
+     */
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = cancel;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static @NotNull HandlerList getHandlerList() {
+        return handlers;
+    }
+
+}
